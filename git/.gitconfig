[user]
	name = Teemu Kaukoranta
	email = teemu.kaukoranta@gmail.com
[core]
	excludesfile = ~/.gitignore_global
	editor = nano
#[difftool "sourcetree"]
#	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
#	path = 
#[mergetool "sourcetree"]
#	cmd = /Users/rosco/Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
#	trustExitCode = true
[push]
	default = simple
[alias]
	unstage = reset HEAD --
	uncommit = reset HEAD~
	rb = "!f() { \
	    echo fetching...; \
	    git fetch; \
	    if [ $? -eq 0 ]; then \
		last_status=$(git status --untracked-files=no --porcelain); \
		if [ \"$last_status\" != \"\" ]; then \
		    echo stashing local changes...; \
		    git stash; \
		else \
		    echo nothing to stash...; \
		fi;\
		if [ $? -eq 0 ]; then \
		    echo rebasing...;\
		    git rebase;\
		    if [ $? -eq 0 ]; then \
			if [ \"$last_status\" != \"\" ]; then\
			    echo applying stashed changes...;\
			    git stash pop;\
			    if [ $? -ne 0 ]; then \
				echo STASH POP FAIL - you will need to resolve merge conflicts with git mergetool; \
			    fi; \
			fi; \
		    else \
			echo REBASE FAILED - you will need to manually run stash pop; \
		    fi;\
		fi;\
	    fi; \
	    if [ $? -ne 0 ]; then \
		echo ERROR: Operation failed; \
	    fi; \
	}; f"
	pull = pull --ff-only
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	ll = log --pretty=format:'%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]' --decorate --numstat
	ls = log --pretty=format:'%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]' --decorate
	last = !git ll -1
